
rules_version = '2';

service cloud.firestore {
  // Ensure this matches your database ID (e.g., (default) or a named database like "ecom")
  match /databases/ecom/documents {

    // Rules for the custom authentication user profiles
    // Document ID is the user's email
    match /auth_users/{userEmail} {
      // Client-side AppLayout needs to read its own user profile
      // to check for isApproved and isAdmin status.
      // Server Actions (which bypass these rules) handle all writes like registration and approval.
      allow get: if true; // Allows fetching a specific user document by its path.
                         // For a prototype, this assumes client only fetches its own email path.
                         // In production, user profile reads should ideally be via Server Actions.

      // Disallow listing the whole auth_users collection from client,
      // and disallow client-side writes.
      allow list, create, update, delete: if false;
    }

    // Rules for user-specific product data
    // Path: /user_products/{userEmail}/uploaded_products/{documentId}
    // documentId can be a product's auto-generated ID or "_metadata"
    match /user_products/{userEmail}/uploaded_products/{documentId} {
      // Client-side pages (Dashboard, Restock, Pillow, ABC) fetch product lists
      // and also perform batch writes to add/delete all products on new Excel upload.
      // This is highly permissive for a prototype to make client-side operations work.
      // For a production application, all product data access and modification
      // should be routed through Server Actions which can validate user ownership.
      allow read, write, delete: if true;
    }

    // Fallback rule: Deny all access to any other paths by default
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
